{
  "openapi": "3.0.0",
  "info": {
    "title": "E-commerce API",
    "description": "This API is designed for a custom e-commerce platform, and features an administrative panel for product and order management, while restricting purchases to registered users. IMPORTANT: To use the routes that ask for administrator permissions, you must use the user that is in the 'login' example.",
    "contact": {
      "name": "Osiris Contreras",
      "url": "https://github.com/Osimitzu",
      "email": "angel_aocc@hotmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://e-commerce-backend-sxpd.onrender.com"
    }
  ],
  "paths": {
    "/api/v1/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "User register",
        "description": "To create a new user, it is essential to provide a valid email address, a password with a minimum of 8 characters, and a username. These fields are mandatory. If the information is provided correctly, you will receive an email to validate your user account.",
        "operationId": "CreateNewUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "username": "Cervantes",
                  "email": "cervantes.aocc@gmail.com",
                  "password": "12345678"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid or missing data"
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "errorQty": {
                          "type": "number",
                          "example": 2
                        }
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Login",
        "description": "Allows a registered user to log in by providing their email and password. NOTE: Use this email and password to log in as an administrator if you want to test routes that ask for administrator permission.",
        "operationId": "Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "password"],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "email": "cervantes.aocc@gmail.com",
                  "password": "12345678"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "string"
                    },
                    "role_id": {
                      "type": "integer"
                    },
                    "car_id": {
                      "type": "integer"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "id": 6,
                    "username": "Cervantes",
                    "email": "cervantes.aocc@gmail.com",
                    "avatar": "1693224115672-gorillaProfilePic.jpg",
                    "role_id": 2,
                    "car_id": 5,
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Validation error"
                    },
                    "message": {
                      "type": "string",
                      "example": "password is mandatory"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid email or password"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/users/delete/{id}": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Users"],
        "summary": "Delete User",
        "description": "To delete a user, it is necessary to pass the user ID you wish to remove through the route parameters. To use this route, you must be logged in and have administrator permissions.",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Please enter the user ID you want to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid user"
                    },
                    "message": {
                      "type": "string",
                      "example": "User doesn't exists"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Role required"
                    },
                    "message": {
                      "type": "string",
                      "example": "Sorry Osimitzu only admins can access here"
                    }
                  }
                }
              }
            }
          },
          "498": {
            "description": "Token expired/invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is not valid or is expired, please check it out and try again"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/users/role/{id}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Users"],
        "summary": "Update User Role",
        "description": "To update a user's role, it is necessary to provide the user ID to whom we want to change the role through the route parameters. In the request body, we must include the \"role_id\" field that we wish to assign, which is an integer; 1 for a standard user and 2 for an administrator. Only administrators have the authority to assign roles.",
        "operationId": "UpdateUserRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Please enter the user ID you want to change role."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["role_id"],
                "type": "object",
                "properties": {
                  "role_id": {
                    "type": "integer"
                  }
                },
                "example": {
                  "role_id": 2
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Role has been updated"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid user"
                    },
                    "message": {
                      "type": "string",
                      "example": "User doesn't exists"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Role required"
                    },
                    "message": {
                      "type": "string",
                      "example": "Sorry Osimitzu only admins can access here"
                    }
                  }
                }
              }
            }
          },
          "498": {
            "description": "Token expired/invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is not valid or is expired, please check it out and try again"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/users/info/{id}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Users"],
        "summary": "Update User Info",
        "description": "Through this endpoint, it is possible to update the username and avatar of a user. In the route parameters, we need to provide the user ID for whom we wish to update their information. In the request body, we can include the new username and avatar. The avatar must be an image with a maximum size of 1000 kilobytes and in either JPEG or PNG format. Only one field at a time can be updated, depending on the requirements. To use this route, it is necessary to be logged in.",
        "operationId": "UpdateUserInfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Please enter the user ID you want to update."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["avatar"],
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": ["username"],
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "LukeW"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Info has been updated"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token does not belong to this user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Role required"
                    },
                    "message": {
                      "type": "string",
                      "example": "Sorry Osimitzu only admins can access here"
                    }
                  }
                }
              }
            }
          },
          "498": {
            "description": "Token expired/invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is not valid or is expired, please check it out and try again"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Only image/jpeg, image/png mimetypes are allowed"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/users/passwordReset": {
      "put": {
        "tags": ["Users"],
        "summary": "Password Reset",
        "description": "To use this endpoint, it is only necessary to provide the email address of the user for whom you wish to reset the password through the request body. Subsequently, you will receive an email with instructions to reset it.",
        "operationId": "PasswordReset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["email"],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "example": {
                  "email": "cervantes.aocc@gmail.com"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Please check out your email to reset your password"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid user"
                    },
                    "message": {
                      "type": "string",
                      "example": "User doesn't exists"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/products/create": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Products"],
        "summary": "Create New Product",
        "description": "This endpoint is used to create a new product, for which it is mandatory to provide the product name and price. Optionally, you can add a description and the available quantity. If the available quantity is not specified, it will be automatically set to 1. Additionally, a default image will be assigned to the product, which can be changed later using another endpoint if desired. NOTE: To use this endpoint, administrator privileges are required.",
        "operationId": "CreateNewProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name", "price"],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "available_qty": {
                    "type": "integer"
                  }
                },
                "example": {
                  "name": "Product-25",
                  "description": "Descipcion del producto pwoqeurpoiuqweafgadfgasd",
                  "price": 99.99,
                  "available_qty": 10
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Validation error"
                    },
                    "message": {
                      "type": "string",
                      "example": "price is mandatory"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Role required"
                    },
                    "message": {
                      "type": "string",
                      "example": "Sorry Osimitzu only admins can access here"
                    }
                  }
                }
              }
            }
          },
          "498": {
            "description": "Token expired/invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is not valid or is expired, please check it out and try again"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/products/image/{id}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Products"],
        "summary": "Update Product Image",
        "description": "This endpoint allows us to update the image of our product, which must be in JPEG or PNG format and should not exceed 1000 kilobytes in size. NOTE: To use this endpoint, administrator privileges are required.",
        "operationId": "UpdateProductImage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Please enter the product id of the product you wish to update the image."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["product_image"],
                "type": "object",
                "properties": {
                  "product_image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Image has been updated"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid product"
                    },
                    "message": {
                      "type": "string",
                      "example": "Product doesn't exist"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Role required"
                    },
                    "message": {
                      "type": "string",
                      "example": "Sorry Osimitzu only admins can access here"
                    }
                  }
                }
              }
            }
          },
          "498": {
            "description": "Token expired/invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is not valid or is expired, please check it out and try again"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Only image/jpeg, image/png mimetypes are allowed"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/products/info/{id}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Products"],
        "summary": "Update Product Info",
        "description": "To update a product's information, administrator privileges are required. It is possible to update the name, description, price, and available quantity. It is not necessary to provide all fields in the request body, only the ones you wish to update. Additionally, in the route parameters, we must include the product ID we want to update.",
        "operationId": "UpdateProductInfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Please enter the product id of the product you wish to update."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "available_qty": {
                    "type": "integer"
                  }
                },
                "example": {
                  "name": "Banana Premium",
                  "description": "banana buena bonita y barata",
                  "price": 249.99,
                  "available_qty": 10
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Info has been updated"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid product"
                    },
                    "message": {
                      "type": "string",
                      "example": "Product doesn't exist"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Role required"
                    },
                    "message": {
                      "type": "string",
                      "example": "Sorry Osimitzu only admins can access here"
                    }
                  }
                }
              }
            }
          },
          "498": {
            "description": "Token expired/invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is not valid or is expired, please check it out and try again"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/products/all": {
      "get": {
        "tags": ["Products"],
        "summary": "Get All Available Products",
        "description": "Through this endpoint, you can retrieve all products with the 'available' status.",
        "operationId": "GetAllProducts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "available_qty": {
                      "type": "integer"
                    },
                    "product_image": {
                      "type": "string"
                    }
                  },
                  "example": [
                    {
                      "id": 6,
                      "name": "Product-1",
                      "description": "Default description",
                      "price": 99.99,
                      "available_qty": 30,
                      "product_image": "1694488546355-HildayTwig.jpg"
                    },
                    {
                      "id": 9,
                      "name": "Product-7",
                      "description": "Default description",
                      "price": 21.59,
                      "available_qty": 2,
                      "product_image": "1694488546355-HildayTwig.jpg"
                    },
                    {
                      "id": 11,
                      "name": "Product-24",
                      "description": "Default description",
                      "price": 12.0,
                      "available_qty": 98,
                      "product_image": "1694488546355-HildayTwig.jpg"
                    },
                    {
                      "id": 18,
                      "name": "Product-41",
                      "description": "Default description",
                      "price": 34.5,
                      "available_qty": 16,
                      "product_image": "1694488546355-HildayTwig.jpg"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/products/singleProduct/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get One Product",
        "description": "Using this endpoint, we can retrieve a specific product by passing the 'id' as a parameter.",
        "operationId": "GetOneProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Please enter the product id of the product you want to see information."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "available_qty": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "enum"
                    },
                    "product_image": {
                      "type": "string"
                    }
                  },

                  "example": {
                    "id": 6,
                    "name": "Product-1",
                    "description": "Default description",
                    "price": 99.99,
                    "available_qty": 30,
                    "status": "available",
                    "product_image": "1694488546355-HildayTwig.jpg"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid product"
                    },
                    "message": {
                      "type": "string",
                      "example": "Product doesn't exist"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/products/delete/{id}": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Products"],
        "summary": "Delete Product",
        "description": "To delete a product, it is necessary to have administrator permissions and provide the product ID that we want to delete in the route parameters.",
        "operationId": "DeleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Please enter the product id of the product you wish to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "Product Deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid product"
                    },
                    "message": {
                      "type": "string",
                      "example": "Product doesn't exist"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Role required"
                    },
                    "message": {
                      "type": "string",
                      "example": "Sorry Osimitzu only admins can access here"
                    }
                  }
                }
              }
            }
          },
          "498": {
            "description": "Token expired/invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is not valid or is expired, please check it out and try again"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/carts/addProduct/{id}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Carts"],
        "summary": "Add Product to Cart",
        "description": "Through this endpoint, we have the ability to add a product to our shopping cart. To do so, it is necessary to be logged in. In the route parameters, we must provide the ID of the cart to which we want to add the products. In the request body, it is mandatory to include the ID and price of the product we wish to add. Optionally, we can specify the quantity we want to add; if not specified, a default quantity of 1 will be added automatically.",
        "operationId": "AddProducttoCar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Please enter the ID of the shopping cart to which the product will be added. NOTE: You can get this 'id' when you logged in as 'car_id'"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["product_id", "price"],
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "integer"
                  },
                  "price": {
                    "type": "number"
                  },
                  "quantity": {
                    "type": "integer"
                  }
                },
                "example": {
                  "product_id": 14,
                  "price": 69.99,
                  "quantity": 3
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid cart"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cart doesn't exist"
                    }
                  }
                }
              }
            }
          },
          "498": {
            "description": "Token expired/invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is not valid or is expired, please check it out and try again"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/carts/products/{user_id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Carts"],
        "summary": "Get All Products in Cart",
        "description": "To view the products in a user's cart, it is necessary to be logged in and provide the user ID in the route parameters.",
        "operationId": "GetAllProductsinCar",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "Please enter the user id to see the products on the user's cart"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_price": {
                      "type": "number",
                      "example": 489.93
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "car_id": {
                            "type": "integer"
                          },
                          "product_id": {
                            "type": "integer"
                          },
                          "quantity": {
                            "type": "integer"
                          },
                          "price": {
                            "type": "number"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "car_id": 5,
                          "product_id": 14,
                          "quantity": 7,
                          "price": 69.99,
                          "status": "unpurchased"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid user"
                    },
                    "message": {
                      "type": "string",
                      "example": "User doesn't exist"
                    }
                  }
                }
              }
            }
          },
          "498": {
            "description": "Token expired/invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is not valid or is expired, please check it out and try again"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/orders/buy": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Orders"],
        "summary": "Buy Products in Cart",
        "description": "With this endpoint, we can proceed to purchase the products in our shopping cart. To do so, it is necessary to be logged in first. In the request body, we must include the user's ID who is making the purchase, along with an array of the products being bought. Each product in the array should specify the product_id, quantity, and price. After using this endpoint, the user's cart will be automatically emptied, and the user will receive an email with the details of their purchase.",
        "operationId": "BuyProductsinCart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["user_id", "products"],
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 6
                  },
                  "products": {
                    "type": "array",
                    "items": {
                      "required": ["product_id", "quantity", "price"],
                      "type": "object",
                      "properties": {
                        "product_id": {
                          "type": "integer",
                          "example": 19
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 3
                        },
                        "price": {
                          "type": "number",
                          "example": 30
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": ["user_id", "products"],
                  "type": "object",
                  "properties": {
                    "order_id": {
                      "type": "integer",
                      "example": 3
                    },
                    "total_price": {
                      "type": "number",
                      "example": 90
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "required": ["product_id", "quantity", "price"],
                        "type": "object",
                        "properties": {
                          "product_id": {
                            "type": "integer",
                            "example": 19
                          },
                          "quantity": {
                            "type": "integer",
                            "example": 3
                          },
                          "price": {
                            "type": "number",
                            "example": 30
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid order"
                    },
                    "message": {
                      "type": "string",
                      "example": "User's cart is empty"
                    }
                  }
                }
              }
            }
          },
          "498": {
            "description": "Token expired/invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is not valid or is expired, please check it out and try again"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/orders/allPendingOrders": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Orders"],
        "summary": "Get All Pending Orders",
        "description": "Since this is a customized e-commerce platform, only administrators have access to this endpoint. Furthermore, being logged in is a requirement to view all orders with the 'pending' status.",
        "operationId": "GetAllPendingOrders",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Role required"
                    },
                    "message": {
                      "type": "string",
                      "example": "Sorry Osimitzu only admins can access here"
                    }
                  }
                }
              }
            }
          },
          "498": {
            "description": "Token expired/invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is not valid or is expired, please check it out and try again"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/orders/completeOrder/{id}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Orders"],
        "summary": "Complete Order",
        "description": "To complete an order, it is necessary to be logged in and have administrator privileges. The only action required is to provide the ID of the order you wish to mark as completed in the route parameters.",
        "operationId": "CompleteOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Please enter the ID of the order you wish to mark as completed. Note: This action cannot be reversed."
          }
        ],
        "responses": {
          "200": {
            "description": "Order completed"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid order"
                    },
                    "message": {
                      "type": "string",
                      "example": "Order doesn't exist or has been already completed"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Role required"
                    },
                    "message": {
                      "type": "string",
                      "example": "Sorry Osimitzu only admins can access here"
                    }
                  }
                }
              }
            }
          },
          "498": {
            "description": "Token expired/invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorName": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is not valid or is expired, please check it out and try again"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "CreateNewUserRequest": {
        "title": "CreateNewUserRequest",
        "required": ["username", "email", "password"],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "example": {
          "username": "Cervantes",
          "email": "cervantes.aocc@gmail.com",
          "password": "12345678"
        }
      },
      "LoginRequest": {
        "title": "LoginRequest",
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "example": {
          "email": "cervantes.aocc@gmail.com",
          "password": "12345678"
        }
      },
      "ResponseUser": {
        "title": "ResponseUser",
        "required": [""],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "role_id": {
            "type": "integer"
          },
          "car_id": {
            "type": "integer"
          },
          "token": {
            "type": "string"
          }
        },
        "example": {
          "id": 6,
          "username": "Cervantes",
          "email": "cervantes.aocc@gmail.com",
          "avatar": "1693224115672-gorillaProfilePic.jpg",
          "role_id": 2,
          "car_id": 5,
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        }
      },
      "UpdateUserRoleRequest": {
        "title": "UpdateUserRoleRequest",
        "required": ["role_id"],
        "type": "object",
        "properties": {
          "role_id": {
            "type": "integer"
          }
        },
        "example": {
          "role_id": 2
        }
      },
      "PasswordResetRequest": {
        "title": "PasswordResetRequest",
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "example": {
          "email": "cervantes.aocc@gmail.com"
        }
      },
      "CreateNewProductRequest": {
        "title": "CreateNewProductRequest",
        "required": ["name", "price"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "available_qty": {
            "type": "integer"
          }
        },
        "example": {
          "name": "Product-25",
          "description": "Descipcion del producto pwoqeurpoiuqweafgadfgasd",
          "price": 99.99,
          "available_qty": 10
        }
      },
      "UpdateProductInfoRequest": {
        "title": "UpdateProductInfoRequest",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "available_qty": {
            "type": "integer"
          }
        },
        "example": {
          "name": "Banana Premium",
          "description": "banana buena bonita y barata",
          "price": 249.99,
          "available_qty": 10
        }
      },
      "ResponseProducts": {
        "title": "ResponseProducts",
        "type": "array",
        "items": {
          "title": "Products",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "price": {
              "type": "number"
            },
            "available_qty": {
              "type": "integer"
            },
            "product_image": {
              "type": "string"
            }
          },
          "example": {
            "id": 6,
            "name": "Product-1",
            "description": "Default description",
            "price": 99.99,
            "available_qty": 30,
            "product_image": "1694488546355-HildayTwig.jpg"
          }
        }
      },
      "ResponseOneProduct": {
        "title": "ResponseOneProduct",
        "required": [""],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "available_qty": {
            "type": "integer"
          },
          "status": {
            "type": "enum"
          },
          "product_image": {
            "type": "string"
          }
        },
        "example": {
          "id": 6,
          "name": "Product-1",
          "description": "Default description",
          "price": 99.99,
          "available_qty": 30,
          "status": "available",
          "product_image": "1694488546355-HildayTwig.jpg"
        }
      },
      "AddProducttoCarRequest": {
        "title": "AddProducttoCarRequest",
        "required": ["product_id", "price"],
        "type": "object",
        "properties": {
          "product_id": {
            "type": "integer"
          },
          "price": {
            "type": "number"
          },
          "quantity": {
            "type": "integer"
          }
        },
        "example": {
          "product_id": 14,
          "price": 69.99,
          "quantity": 3
        }
      },
      "AllProductsInCar": {
        "title": "AllProductsInCar",
        "type": "object",
        "properties": {
          "total_price": {
            "type": "number",
            "example": 489.93
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "car_id": {
                  "type": "integer"
                },
                "product_id": {
                  "type": "integer"
                },
                "quantity": {
                  "type": "integer"
                },
                "price": {
                  "type": "number"
                },
                "status": {
                  "type": "string"
                }
              },
              "example": {
                "car_id": 5,
                "product_id": 14,
                "quantity": 7,
                "price": 69.99,
                "status": "unpurchased"
              }
            }
          }
        }
      },
      "BuyProductsinCarRequest": {
        "title": "BuyProductsinCarRequest",
        "required": ["user_id", "products"],
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "example": 6
          },
          "products": {
            "type": "array",
            "items": {
              "title": "Product",
              "required": ["product_id", "quantity", "price"],
              "type": "object",
              "properties": {
                "product_id": {
                  "type": "integer",
                  "example": 19
                },
                "quantity": {
                  "type": "integer",
                  "example": 3
                },
                "price": {
                  "type": "number",
                  "example": 30
                }
              }
            }
          }
        }
      },
      "OrderDetailsResponse": {
        "title": "OrderDetailsResponse",
        "required": ["user_id", "products"],
        "type": "object",
        "properties": {
          "order_id": {
            "type": "integer",
            "example": 3
          },
          "total_price": {
            "type": "number",
            "example": 90
          },
          "products": {
            "type": "array",
            "items": {
              "title": "Product",
              "required": ["product_id", "quantity", "price"],
              "type": "object",
              "properties": {
                "product_id": {
                  "type": "integer",
                  "example": 19
                },
                "quantity": {
                  "type": "integer",
                  "example": 3
                },
                "price": {
                  "type": "number",
                  "example": 30
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": "Users Routes"
    },
    {
      "name": "Products",
      "description": "Products Routes"
    },
    {
      "name": "Carts",
      "description": "Carts Routes"
    },
    {
      "name": "Orders",
      "description": "Orders Routes"
    }
  ]
}
